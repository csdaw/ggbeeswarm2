% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-beeswarm.R
\name{geom_beeswarm}
\alias{geom_beeswarm}
\title{Beeswarm points}
\usage{
geom_beeswarm(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  ...,
  method = "swarm",
  spacing = 1,
  side = 0L,
  priority = "ascending",
  dodge.width = NULL,
  corral = "none",
  corral.width = 0.2,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}} or
\code{\link[ggplot2:aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{layer()}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{colour = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}

\item{method}{\code{string}. Method for arranging points, default is \code{"swarm"}. See
details below.}

\item{spacing}{\code{numeric}. Relative spacing between points, default is \code{1}.
You should adjust this if you change the size of the points. Generally the
spacing should be 2/3 of the point size i.e. if \code{size = 3}, then \code{spacing = 2},
but this is ultimately up to personal preference.}

\item{side}{\code{integer}. Direction to perform jittering: use \code{0L} for both directions;
\code{1L} for right/upwards; \code{-1L} for left/downwards.}

\item{priority}{\code{string}. Method used to perform point layout, default is
\code{"ascending"}. See details below.}

\item{dodge.width}{\code{numeric}. Amount to dodge points from different aesthetic
groups, default is \code{NULL} for no dodging.}

\item{corral}{\code{string}. Method used to adjust points that would be placed to
wide horizontally, default is \code{"none"}. See details below.}

\item{corral.width}{\code{numeric}. Width of the corral, default is \code{0.2}.}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}
}
\description{
The beeswarm geom is a convenient shortcut for
\code{geom_point(position = "beeswarm")}. It shifts points to avoid
overplotting using the \code{\link{swarmx}} function from the \code{beeswarm}
package.
}
\details{
\strong{method:} specifies the algorithm used to avoid overlapping points. The
default \code{"swarm"} method places points in increasing order. If a point would
overlap with an existing point, it is shifted sideways (along the group axis)
by a minimal amount sufficient to avoid overlap.

The other 3 methods first discretise the values along the data axis, in order
to create more efficient packing. The \code{"square"} method places points on a
square grid, whereas \code{"hex"} uses a hexagonal grid. \code{"centre"} uses a square grid
to produce a symmetric swarm. The number of break points for discretisation
is determined by a combination of the available plotting area and the
\code{spacing} argument.

\strong{priority:} controls the order in which points are placed, which generally
has a noticeable effect on the plot appearance. \code{"ascending"} gives the
'traditional' beeswarm plot. \code{"descending"} is the opposite. \code{"density"}
prioritizes points with higher local density. \code{"random"} places points in a
random order. \code{"none"} places points in the order provided.

\strong{corral:} By default, swarms from different groups are not prevented from
overlapping, i.e. \verb{"corral = "none"}. Thus, datasets that are very large or
unevenly distributed may produce ugly overlapping beeswarms. To control
runaway points one can use the following methods. \code{"gutter"} collects runaway
points along the boundary between groups. \code{"wrap"} implement periodic boundaries.
\code{"random"} places runaway points randomly in the region. \code{"omit"} omits runaway
points.
}
\section{Aesthetics}{

\code{geom_beeswarm()} understands the following aesthetics (required aesthetics
are in bold):
\itemize{
\item \strong{x}
\item \strong{y}
\item alpha
\item colour
\item fill
\item group
\item shape
\item size
\item stroke
}

Learn more about setting these aesthetics in \code{vignette("ggplot2-specs")}.
}

\examples{
#
}
\seealso{
\code{\link[=position_beeswarm]{position_beeswarm()}} for the underlying function to this geom.
\code{\link[=geom_quasirandom]{geom_quasirandom()}} for another method of shifting points to avoid
overplotting.
}
